# -*- coding: utf-8 -*-
"""lit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g7Pq8Y-7Hmq6SUSKsMB6jnq-1MCHsbyc
"""

import numpy as np
import pickle
import streamlit

import torch
from torch.nn import Sequential

model = torch.load("\model_93_acc_100_frames_celeb_FF_data.pt")


def make_prediction(img):
    img_processed = img_preprocess(img)
    prediction = model(img_procesed.unsqueeze(0))
    prediction = prediction[0]
    prediction["labels"] = [categories[label] for label in prediction["labels"]]
    return prediction


def process_video(video_file):
    vidcap = cv2.VideoCapture(video_file)
    success, image = vidcap.read()
    count = 0
    while success:
        # Process each frame and make predictions
        img = Image.fromarray(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
        prediction = make_prediction(img)
        st.write("Prediction for frame {}: {}".format(count, prediction))

        # Read next frame
        success, image = vidcap.read()
        count += 1


def main():
    st.title("NotOfaque-Decoding Reality")
    upload = st.file_uploader(label="Upload Your File Here:", type=["png", "jpg", "jpeg", "mp4"])

    if (upload.type == "png" or upload.type == "jpg" or upload.type == "jpeg"):
        img = Image.open(upload)
        prediction = {"Your Result Is" + make_prediction(img)}

    elif (upload.type == "mp4"):
        process_video(upload)
